diff --git a/src/wallet/api/pending_transaction.cpp b/src/wallet/api/pending_transaction.cpp
index 2dd118ea3..2d5aefe0e 100644
--- a/src/wallet/api/pending_transaction.cpp
+++ b/src/wallet/api/pending_transaction.cpp
@@ -78,6 +78,70 @@ std::vector<std::string> PendingTransactionImpl::txid() const
     return txid;
 }
 
+// This function returns **all** tx keys for the transaction with the given tx hash in the [`PendingTransaction`].
+// A [`PendingTransaction`] can contain multiple transactions. A single transaction can have multiple tx keys.
+std::vector<std::tuple<std::string, std::string, std::string>> PendingTransactionImpl::txKeys(const std::string &tx_hash) const
+{
+    std::vector<std::tuple<std::string, std::string, std::string>> keys;
+
+    for (const auto &ptx : m_pending_tx)
+    {
+        const std::string current_tx_hash = epee::string_tools::pod_to_hex(cryptonote::get_transaction_hash(ptx.tx));
+        
+        if (current_tx_hash != tx_hash) 
+        {
+            continue;
+        }
+
+        const std::string key = epee::string_tools::pod_to_hex(unwrap(unwrap(ptx.tx_key)));
+
+        for (size_t i = 0; i < ptx.construction_data.splitted_dsts.size(); i++) {
+            const cryptonote::tx_destination_entry &output = ptx.construction_data.splitted_dsts[i];
+
+            if (output.original.empty()) {
+                throw std::runtime_error("Output's original address is empty");
+            }
+
+            const std::string address = output.original;
+            
+            crypto::public_key output_public_key;
+            if (!cryptonote::get_output_public_key(ptx.tx.vout[i], output_public_key)) {
+                throw std::runtime_error("Failed to get output public key for output " + std::to_string(i));
+            }
+
+            // We match the main tx key and all additional tx keys for whether
+            // any of them match the output's public key.
+            std::vector<crypto::secret_key> keys_to_try = ptx.additional_tx_keys;
+            keys_to_try.push_back(ptx.tx_key);
+
+            bool key_found = false;
+            for (const crypto::secret_key &possible_key : keys_to_try) {
+                crypto::key_derivation key_derivation;
+                if (!crypto::generate_key_derivation(output.addr.m_view_public_key, possible_key, key_derivation)) {
+                    throw std::runtime_error("Failed to generate key derivation for output " + std::to_string(i));
+                }
+
+                crypto::public_key derived_public_key;
+                if (!crypto::derive_public_key(key_derivation, i, output_public_key, derived_public_key)) {
+                    throw std::runtime_error("Failed to derive public key for output " + std::to_string(i));
+                }
+
+                if (derived_public_key == output_public_key) {
+                    keys.emplace_back(std::make_tuple(current_tx_hash, address, epee::string_tools::pod_to_hex(unwrap(unwrap(possible_key)))));
+                    key_found = true;
+                    break;
+                }
+            }
+
+            if (!key_found) {
+                throw std::runtime_error("No key found for output " + std::to_string(i));
+            }
+        }
+    }
+
+    return keys;
+}
+
 bool PendingTransactionImpl::commit(const std::string &filename, bool overwrite)
 {
 
diff --git a/src/wallet/api/pending_transaction.h b/src/wallet/api/pending_transaction.h
index c5f4328a8..0377eb79c 100644
--- a/src/wallet/api/pending_transaction.h
+++ b/src/wallet/api/pending_transaction.h
@@ -33,6 +33,7 @@
 
 #include <string>
 #include <vector>
+#include <tuple>
 
 
 namespace Monero {
@@ -50,6 +51,7 @@ public:
     uint64_t dust() const override;
     uint64_t fee() const override;
     std::vector<std::string> txid() const override;
+    std::vector<std::tuple<std::string, std::string, std::string>> txKeys(const std::string &tx_hash) const override;
     uint64_t txCount() const override;
     std::vector<uint32_t> subaddrAccount() const override;
     std::vector<std::set<uint32_t>> subaddrIndices() const override;
diff --git a/src/wallet/api/wallet2_api.h b/src/wallet/api/wallet2_api.h
index ca807ac87..29a89f273 100644
--- a/src/wallet/api/wallet2_api.h
+++ b/src/wallet/api/wallet2_api.h
@@ -131,6 +131,7 @@ struct PendingTransaction
     virtual uint64_t dust() const = 0;
     virtual uint64_t fee() const = 0;
     virtual std::vector<std::string> txid() const = 0;
+    virtual std::vector<std::tuple<std::string, std::string, std::string>> txKeys(const std::string &tx_hash) const = 0;
     /*!
      * \brief txCount - number of transactions current transaction will be splitted to
      * \return
