/*
 * Intercambio.app API
 *
 * API endpoint for retrieving path information from Intercambio.app, including detailed state and trade information.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TradeState {
    /// A human-readable description matching the type.
    #[serde(rename = "description")]
    pub description: String,
    /// Indicates if the state is final (no further changes expected).
    #[serde(rename = "final")]
    pub r#final: bool,
    /// The type of the trade state, determined based on the provider's status: - 'initial': Waiting for deposit. - 'confirming': Waiting for confirmations. - 'exchanging': Exchanging in progress. - 'success': Completed successfully. - 'refunded': Refunded successfully. - 'failed': Failed. - 'expired': Expired (do not send deposit; contact support if already sent). - 'unrecognized': Unrecognized status (contact support). 
    #[serde(rename = "type")]
    pub r#type: Type,
    /// Validity period in seconds (always 30).
    #[serde(rename = "valid_for")]
    pub valid_for: i32,
}

impl TradeState {
    pub fn new(description: String, r#final: bool, r#type: Type, valid_for: i32) -> TradeState {
        TradeState {
            description,
            r#final,
            r#type,
            valid_for,
        }
    }
}
/// The type of the trade state, determined based on the provider's status: - 'initial': Waiting for deposit. - 'confirming': Waiting for confirmations. - 'exchanging': Exchanging in progress. - 'success': Completed successfully. - 'refunded': Refunded successfully. - 'failed': Failed. - 'expired': Expired (do not send deposit; contact support if already sent). - 'unrecognized': Unrecognized status (contact support). 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "initial")]
    Initial,
    #[serde(rename = "confirming")]
    Confirming,
    #[serde(rename = "exchanging")]
    Exchanging,
    #[serde(rename = "success")]
    Success,
    #[serde(rename = "refunded")]
    Refunded,
    #[serde(rename = "failed")]
    Failed,
    #[serde(rename = "expired")]
    Expired,
    #[serde(rename = "unrecognized")]
    Unrecognized,
}

impl Default for Type {
    fn default() -> Type {
        Self::Initial
    }
}

