/*
 * Intercambio.app API
 *
 * API endpoint for retrieving path information from Intercambio.app, including detailed state and trade information.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PathState {
    /// A human-readable description of the state. For 'error', this includes the specific error message.
    #[serde(rename = "description")]
    pub description: String,
    /// Indicates if the state is final (no further changes expected).
    #[serde(rename = "final")]
    pub r#final: bool,
    /// The type of the path creation state: - 'not found': Path could not be found (returned with 404 status). - 'queued': Path creation is queued and in progress. - 'error': An error occurred during path creation. - 'created': Path created successfully (for empty trade lists). 
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl PathState {
    pub fn new(description: String, r#final: bool, r#type: Type) -> PathState {
        PathState {
            description,
            r#final,
            r#type,
        }
    }
}
/// The type of the path creation state: - 'not found': Path could not be found (returned with 404 status). - 'queued': Path creation is queued and in progress. - 'error': An error occurred during path creation. - 'created': Path created successfully (for empty trade lists). 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "not found")]
    NotFound,
    #[serde(rename = "queued")]
    Queued,
    #[serde(rename = "error")]
    Error,
    #[serde(rename = "created")]
    Created,
}

impl Default for Type {
    fn default() -> Type {
        Self::NotFound
    }
}

