/*
 * Intercambio.app API
 *
 * API endpoint for retrieving path information from Intercambio.app, including detailed state and trade information.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PathResponse {
    #[serde(rename = "chat")]
    pub chat: Box<models::PathResponseChat>,
    /// The UUID of the path.
    #[serde(rename = "path_uuid")]
    pub path_uuid: String,
    #[serde(rename = "state")]
    pub state: Box<models::PathState>,
    /// List of trades in the path. Only present if the path_data is a non-empty list of trades.
    #[serde(rename = "trades", skip_serializing_if = "Option::is_none")]
    pub trades: Option<Vec<models::Trade>>,
    #[serde(rename = "url")]
    pub url: Box<models::PathResponseUrl>,
}

impl PathResponse {
    pub fn new(
        chat: models::PathResponseChat,
        path_uuid: String,
        state: models::PathState,
        url: models::PathResponseUrl,
    ) -> PathResponse {
        PathResponse {
            chat: Box::new(chat),
            path_uuid,
            state: Box::new(state),
            trades: None,
            url: Box::new(url),
        }
    }
}
