/*
 * Intercambio.app API
 *
 * API endpoint for retrieving path information from Intercambio.app, including detailed state and trade information.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TradeProvider {
    /// Optional OrangeFren Guarantee deposit size in BTC.
    #[serde(rename = "guarantee", skip_serializing_if = "Option::is_none")]
    pub guarantee: Option<String>,
    /// Name of the exchange provider (e.g., t.exchange_name).
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "trade")]
    pub trade: Box<models::TradeProviderTrade>,
    /// Optional warning regarding this provider.
    #[serde(rename = "warning", skip_serializing_if = "Option::is_none")]
    pub warning: Option<String>,
}

impl TradeProvider {
    pub fn new(name: String, trade: models::TradeProviderTrade) -> TradeProvider {
        TradeProvider {
            guarantee: None,
            name,
            trade: Box::new(trade),
            warning: None,
        }
    }
}

