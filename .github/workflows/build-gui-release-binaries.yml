# This file is used to build the release binaries for the Tauri GUI
name: "Publish GUI release to GitHub"

on:
  release:
    types: [created]

concurrency:
  group: build-gui-release-${{ github.event.release.tag_name }}
  cancel-in-progress: true

jobs:
  draft-cb-release:
    # Do not publish preview releases to CloudNebula
    if: ${{ !contains(github.ref_name, 'preview') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create Draft Release
        uses: crabnebula-dev/cloud-release@v0
        with:
          command: release draft ${{ env.CN_APPLICATION }} --framework tauri
          api-key: ${{ secrets.CN_API_KEY }}

  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-13" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-24.04" # We build on an older version to support older glib versions
            args: "--bundles deb,appimage"
          # Temporarily disabled Windows builds
          # - platform: "windows-latest"
          #   args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up environment variables
        uses: ./.github/actions/set-monero-env

      - uses: actionhippie/swap-space@v1
        if: matrix.platform == env.UBUNTU_PLATFORM_ID
        with:
          size: 15G

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@1.80
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Configure apt for retries (ubuntu only)
        if: matrix.platform == env.UBUNTU_PLATFORM_ID
        run: ${{ env.APT_SET_CONF_COMMAND }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == env.UBUNTU_PLATFORM_ID # This must match the platform value defined above.
        run: |
          sudo apt update;
          sudo apt install -y ${{ env.DEPS_MONERO_LINUX }} ${{ env.DEPS_GUI_UBUNTU_SPECIFIC }} git

      - name: Clone submodules
        run: git submodule update --init --recursive

      - name: work around spurious network errors in curl 8.0
        shell: bash
        run: |
          echo "CARGO_HTTP_MULTIPLEXING=false" >> $GITHUB_ENV

      - name: install frontend dependencies
        working-directory: src-gui
        # Set the yarn network timeout to a high value to avoid spurious network errors
        run: yarn install --network-timeout 600000

      - name: install tauri-cli globally
        uses: taiki-e/install-action@v2
        with:
          tool: tauri-cli@2.8.0

      - name: install just globally
        uses: taiki-e/install-action@v2
        with:
          tool: just@1.42.4

      - name: install typeshare-cli globally
        uses: taiki-e/install-action@v2
        with:
          tool: typeshare-cli@1.13.3

      - name: install dprint globally
        uses: taiki-e/install-action@v2
        with:
          tool: dprint@0.50.1

      - name: prepare the windows build by building gcc from source (yuck)
        shell: bash
        run: |
          just prepare-windows-build

      - name: build tauri app and upload to github releases page
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.BOTTY_GITHUB_TOKEN }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          releaseId: ${{ github.event.release.id }}
          projectPath: src-tauri
          args: ${{ matrix.args }}
          tauriScript: cargo tauri

      - name: upload to crabnebula release (not for previews)
        if: ${{ !contains(github.ref_name, 'preview') }}
        uses: crabnebula-dev/cloud-release@v0
        with:
          command: release upload ${{ env.CN_APPLICATION }} --framework tauri
          api-key: ${{ secrets.CN_API_KEY }}

  publish:
    if: ${{ !contains(github.ref_name, 'preview') }} # don't publish previews to crabnebula
    needs: [draft-cb-release, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actionhippie/swap-space@v1
        with:
          size: 15G

      - name: Publish Release
        uses: crabnebula-dev/cloud-release@v0
        with:
          command: release publish ${{ env.CN_APPLICATION }} --framework tauri
          api-key: ${{ secrets.CN_API_KEY }}
